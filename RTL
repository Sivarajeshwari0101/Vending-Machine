module ven_mac(i,j,clk,rst,x,y);
	input i,j,clk,rst;
	output x,y;
	
	parameter S0=3'b000;
	parameter S1=3'b001;
	parameter S2=3'b010;
	parameter S3=3'b011;
	parameter S4=3'b100;
	
	reg [2:0] state,nxt_state;
	
	always@(posedge clk)
	begin
		if(rst)
			state <= S0;
		else
			state <= nxt_state;
	end
	
	always@(state or i or j)
	begin
		nxt_state=S0;
		case(state)
			S0 : begin
				   if(i && ~j)
						nxt_state = S1;
				   else if(i&&j)
						nxt_state = S2;
				   else 
						nxt_state = S0;
				   end
			S1 : begin
					if(i && ~j)
						nxt_state = S2;
					else if(i&&j)
						nxt_state = S3;
					else 
						nxt_state = S0;
				end
			S2 : begin
					if(i && ~j)
						nxt_state = S3;
					else if(i&&j)
						nxt_state = S4;
					else 
						nxt_state = S0;
				end
			S3 : begin
					nxt_state = S0;
				end
			S4 : begin
					nxt_state = S0;
				end
		endcase
	end
	
	assign x = (state==S3) || (state==S4);
	assign y = (state==S4);
endmodule
